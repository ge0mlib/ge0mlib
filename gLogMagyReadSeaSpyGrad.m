function out=gLogMagyReadSeaSpyGrad(fName,Delim,EqId)
%Read SeaSpy Gradiometer data from gLog
%function out=gLogMagyReadSeaSpyGrad(fName,LDelim,AltCh), where
%fName- path to folder/file with SeaSpy Gradiometer data;
%Delim- [left_delimiter_symbol right_delimiter_symbol] for gLog record;
%EqId- serial numbers [mag1, alt1, depth1; mag2, alt2, depth2], NaN is "no devise";
%out- output structure, which includes fields: CompDay, CompTime, MagDay, MagTime, MagAbsT, MagPrecSignal, MeasurTime, Depth, Altitude, FlagsGWP.
%Example: out=gLogMagyReadSeaSpyGrad('c:\temp\whghghhe\TEST.Nav.txt','~',3);
%--------------------------------------------------------------------------------------
%Log-file (created by gComLog program) example:
%~43322102,*19.212/04:12:40.0 F[017345.893 074 0013 +0001.7 000.00 G_P] R[021818.742 080 0015 -0027.0 000.00 G_P] -04472.849
%where
%~ - left delimiter (symbol 1);
%43322102 - second per day./1000 (symbols 2-9);
%, - right delimiter (symbol 10);
%*19.212/... - SeaSpy Gradiometer data.
%--------------------------------------------------------------------------------------
%*19.212/04:12:40.0 F[017345.893 074 0013 +0001.7 000.00 G_P] R[021818.742 080 0015 -0027.0 000.00 G_P] -04472.849
%*19.212/04:12:41.5 F[018227.327 089 0213 +0001.7 000.00 G__] R[021852.546 047 0005 -0027.0 000.00 G__] -03625.219
%*YY.JJJ/HH:MM:SS.S F[FFFFFF.FFF SSS TTTT DDDD.D AAA.AA !!!] R[FFFFFF.FFF SSS TTTT DDDD.D AAA.AA !!!] –GRADIEN CR LF
%Y- Year; JJJ- Julian day; HH- Hour; MM- Minute; SS.S- Second;
%FFFFFF.FFF- Magnetic field (nT);
%SSS- Signal strength of reading. This is a raw number generated by the magnetometer that gives (in part) a good indication of the quality of the final total field measurement. Anything over 80 is considered an acceptable signal, and anything over 130 is considered excellent (SSS should be between 130 and 200 for good quality readings).
%TTTT- Measurement time. Ideally, this should be the magnetometer’s cycling time minus 35ms, with a maximum of 965ms (965 when F is greater than 42000 and 465 when F is less than 42000). If you see a G message, indicating that measurement was prematurely terminated due to a high gradient condition, this value will tell you how severe the gradient is.
%DDDD.D- Towfish Depth. The value shown is in meters. The depth sensor can be calibrated using the P and p commands.
%AAA.AA- Towfish Altitude. The value shown is in meters. If no altimeter is installed, this field will not be present. If an altimeter is installed, but it cannot obtain a ‘lock’ on the seafloor (for example if it is too far away) this value will be 000.0m.
%!!!- Warning Messages "GWP" or "___", formed as bits-flag for each sensor: 
%G- Gradient condition. In high magnetic gradients, the signal produced by the sensor decays more quickly. This message occurs if the measurement time was prematurely terminated due to a quickly decaying signal. The strength of the gradient can be estimated by observing the measurement time. Note that sensitivity will decrease as the measurement time decreases.
%W- Weak signal. This message is displayed if the signal strength for the reading is below a threshold value;
%P- Poor reading. This message is displayed if the signal is sampled for too short a time period, for whatever the reason. Expect this message under conditions of extremely high magnetic gradient.
%M- Used for compatibility with "gLogMagyReadSeaSpy" Instrument Mistuned, always set to 0 for "gLogMagyReadSeaSpyGrad" (the magnetometer may decide to display this message under extremely poor signal conditions, which is characteristic of poor tuning settings. When this message occurs, the instrument will attempt to retune by executing an initialize tuning procedure, if the auto-tuning feature is enabled).
%F[...] and R[...]- Front and Rear towfishes;
%–GRADIEN- Front field minus Rear field and devide dy distance;
%CR LF- Carriage Return (ASCII code 13), Line Feed (ASCII code 10).
%--------------------------------------------------------------------------------------

if (size(fName,1)==1)&&(fName(end)=='\'), dz=dir(fName);dz([dz.isdir])=[];fName=[repmat(fName,length(dz),1) char(dz.name)];end; %fName=sortrows(fName);
out=struct('CompDay',[],'CompTime',[],'MagDay',[],'MagTime',[],'MagAbsT',[],'MagPrecSignal',[],'MeasurTime',[],'Depth',[],'Altitude',[],'FlagsMGWP',[]);
for nn=1:size(fName,1),
    fNameN=deblank(fName(nn,:));
    %disp(fNameN);
    [fId, mes]=fopen(fNameN,'r');if ~isempty(mes), error(mes);end;
    if isnan(EqId(1,2))&&isnan(EqId(2,2)), C=textscan(fId,'%c%f%c*%f/%f:%f:%f F[%f %f %f %f %c%c%c] R[%f %f %f %f %c%c%c] %f\r\n','Delimiter',' ', 'MultipleDelimsAsOne',0); C=[C{1:11} {zeros(size(C{1}))} C{12:18} {zeros(size(C{1}))} C{19:22}];end
    if ~isnan(EqId(1,2))&&isnan(EqId(2,2)), C=textscan(fId,'%c%f%c*%f/%f:%f:%f F[%f %f %f %f %f %c%c%c] R[%f %f %f %f %c%c%c] %f\r\n','Delimiter',' ', 'MultipleDelimsAsOne',0); C=[C{1:19} {zeros(size(C{1}))} C{20:23}];end;
    if isnan(EqId(1,2))&&~isnan(EqId(2,2)), C=textscan(fId,'%c%f%c*%f/%f:%f:%f F[%f %f %f %f %c%c%c] R[%f %f %f %f %f %c%c%c] %f\r\n','Delimiter',' ', 'MultipleDelimsAsOne',0); C=[C{1:11} {zeros(size(C{1}))} C{12:23}];end;
    if ~isnan(EqId(1,2))&&~isnan(EqId(2,2)), C=textscan(fId,'%c%f%c*%f/%f:%f:%f F[%f %f %f %f %f %c%c%c] R[%f %f %f %f %f %c%c%c] %f\r\n','Delimiter',' ', 'MultipleDelimsAsOne',0);end;
    fclose(fId);
    if any(C{1}~=Delim(1)), error('LeftDelimiter not true');end;
    if any(C{3}~=Delim(2)), error('RightDelimiter not true');end;
    CompTime=C{2}'./1000;
    L=find(fNameN=='\');fNameDay=fNameN(L(end)+1:L(end)+8);tmp=datenum(str2double(fNameDay(1:4)),str2double(fNameDay(5:6)),str2double(fNameDay(7:8)));CompDay=repmat(tmp,size(CompTime));
    MagDay=datenum(2000+fix(C{4}),0,(C{4}-fix(C{4}))*1000)';
    MagTime=(C{5}*3600+C{6}*60+C{7})';
    FlagsGWP=uint8([(C{13}=='G').*4+(C{14}=='W').*2+(C{15}=='P').*1 (C{21}=='G').*4+(C{22}=='W').*2+(C{23}=='P').*1])';
    %add structs
    out1=struct('CompDay',CompDay,'CompTime',CompTime,'MagDay',MagDay,'MagTime',MagTime,'MagAbsT',[C{8} C{16}]','MagPrecSignal',[C{9} C{17}]','MeasurTime',[C{10} C{18}]',...
        'Depth',[C{11} C{19}]','Altitude',[C{12} C{20}]','FlagsMGWP',FlagsGWP);
    out=gFieldsRowAppend(out,out1,size(out.CompDay,2));
end;

%mail@ge0mlib.com 30/09/2019